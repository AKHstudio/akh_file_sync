name: Generate Release Notes

on:
    pull_request:
        types: [opened, synchronize]
        branches:
            - main

jobs:
    generate-release-notes:
        # releaseからmainへのPRの場合のみ実行
        if: github.head_ref == 'release'
        runs-on: ubuntu-latest
        permissions:
            contents: write
            pull-requests: write

        steps:
            - name: Checkout code
              uses: actions/checkout@v4
              with:
                  ref: ${{ github.head_ref }}
                  fetch-depth: 0

            - name: Setup Node.js
              uses: actions/setup-node@v4
              with:
                  node-version: '20'

            - name: Extract version from PR
              id: extract-version
              run: |
                  # PRのタイトルまたはブランチ名からバージョンを抽出
                  PR_TITLE="${{ github.event.pull_request.title }}"
                  BRANCH_NAME="${{ github.head_ref }}"

                  # タイトルからバージョンを抽出 (例: "Release v1.2.3" → "1.2.3")
                  if [[ "$PR_TITLE" =~ [vV]?([0-9]+\.[0-9]+\.[0-9]+) ]]; then
                    VERSION="${BASH_REMATCH[1]}"
                  # ブランチ名からバージョンを抽出 (例: "release/1.2.3" → "1.2.3")
                  elif [[ "$BRANCH_NAME" =~ release/[vV]?([0-9]+\.[0-9]+\.[0-9]+) ]]; then
                    VERSION="${BASH_REMATCH[1]}"
                  else
                    # バージョンが見つからない場合は次のパッチバージョンを使用
                    LATEST_TAG=$(git describe --tags --abbrev=0 2>/dev/null || echo "v0.0.0")
                    VERSION=$(echo $LATEST_TAG | sed 's/v//' | awk -F. '{print $1"."$2"."$3+1}')
                  fi

                  echo "version=$VERSION" >> $GITHUB_OUTPUT
                  echo "Detected version: $VERSION"

            - name: Install dependencies
              working-directory: .github/actions/release-notes
              run: |
                  npm install 
                  npm run build

            - name: Generate release notes
              id: generate
              uses: ./.github/actions/release-notes
              with:
                  github-token: ${{ secrets.GITHUB_TOKEN }}
                  version: ${{ steps.extract-version.outputs.version }}

            - name: Commit and push changes
              run: |
                  git config --local user.email "github-actions[bot]@users.noreply.github.com"
                  git config --local user.name "github-actions[bot]"

                  git add CHANGELOG.md changelogs/

                  if git diff --staged --quiet; then
                    echo "No changes to commit"
                  else
                    git commit -m "docs: update release notes for v${{ steps.extract-version.outputs.version }}"
                    git push
                  fi

            - name: Comment on PR
              uses: actions/github-script@v7
              with:
                  script: |
                      import fs from 'fs';
                      const version = '${{ steps.extract-version.outputs.version }}';
                      const changelogPath = `changelogs/v${version}.md`;

                      let comment = `## 🎉 Release Notes Generated\n\n`;
                      comment += `Release notes for version **${version}** have been generated and committed.\n\n`;

                      if (fs.existsSync(changelogPath)) {
                        const content = fs.readFileSync(changelogPath, 'utf8');
                        comment += `<details>\n<summary>Preview</summary>\n\n${content}\n</details>`;
                      }

                      github.rest.issues.createComment({
                        issue_number: context.issue.number,
                        owner: context.repo.owner,
                        repo: context.repo.repo,
                        body: comment
                      });
