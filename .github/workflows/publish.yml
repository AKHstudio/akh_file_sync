name: Publish and Release

on:
    push:
        tags:
            - 'v*' # ‰æã: v1.0.0 „ÅÆ„Çà„ÅÜ„Å™„Çø„Ç∞„Çí„Éó„ÉÉ„Ç∑„É•„Åó„Åü„Å®„Åç„Å´ÂÆüË°å

jobs:
    update-version:
        runs-on: ubuntu-latest
        steps:
            - name: „É™„Éù„Ç∏„Éà„É™„Çí„ÉÅ„Çß„ÉÉ„ÇØ„Ç¢„Ç¶„Éà
              uses: actions/checkout@v4
              with:
                  ref: main
                  token: ${{ secrets.GH_PAT }} # PushÁî®„ÅÆPATÔºàPersonal Access TokenÔºâ

            - name: „Çø„Ç∞Âêç„ÇíÂèñÂæó
              id: get_tag
              run: echo "TAG_NAME=${GITHUB_REF#refs/tags/}" >> $GITHUB_ENV

            - name: package.json „ÅÆ„Éê„Éº„Ç∏„Éß„É≥„ÇíÊõ¥Êñ∞
              run: |
                  NEW_VERSION=${TAG_NAME#v}
                  jq ".version = \"$NEW_VERSION\"" package.json > temp.json && mv temp.json package.json

            - name: Â§âÊõ¥„Çí„Ç≥„Éü„ÉÉ„Éà & „Éó„ÉÉ„Ç∑„É•
              run: |
                  if [ -n "$(git diff package.json)" ]; then
                    git config --global user.name "github-actions[bot]"
                    git config --global user.email "41898282+github-actions[bot]@users.noreply.github.com"
                    git add package.json
                    git commit -m "Update package.json" -m "update version to ${TAG_NAME#v}"
                    git push origin main
                  else
                    echo "package.json „Å´Â§âÊõ¥„ÅØ„ÅÇ„Çä„Åæ„Åõ„Çì üìù"
                    echo "„Ç≥„Éü„ÉÉ„Éà„Çí„Çπ„Ç≠„ÉÉ„Éó„Åó„Åæ„Åô"
                  fi

    publish:
        needs: update-version
        runs-on: ubuntu-latest
        steps:
            - name: „É™„Éù„Ç∏„Éà„É™„Çí„ÉÅ„Çß„ÉÉ„ÇØ„Ç¢„Ç¶„Éà
              uses: actions/checkout@v4
              with:
                  ref: main
                  token: ${{ secrets.GH_PAT }}

            - name: pakcage.json „ÅÆ„Éê„Éº„Ç∏„Éß„É≥„ÇíÁ¢∫Ë™ç
              run: cat package.json

            - name: Node.js„ÅÆ„Çª„ÉÉ„Éà„Ç¢„ÉÉ„Éó
              uses: actions/setup-node@v4
              with:
                  node-version: '20'
                  registry-url: 'https://registry.npmjs.org/'

            - name: ‰æùÂ≠òÈñ¢‰øÇ„ÅÆ„Ç§„É≥„Çπ„Éà„Éº„É´
              run: npm ci

            - name: „É™„É™„Éº„Çπ„Éì„É´„Éâ
              run: npm run release
              continue-on-error: true

            - name: npm„Éë„Éñ„É™„ÉÉ„Ç∑„É•
              run: npm publish --access public
              env:
                  NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
              continue-on-error: true

            - name: tag„ÇíÂâäÈô§
              if: failure()
              run: |
                  git config --global user.name "github-actions[bot]"
                  git config --global user.email "41898282+github-actions[bot]@users.noreply.github.com"
                  git push origin --delete ${{ env.TAG_NAME }}

    release:
        needs: publish
        runs-on: ubuntu-latest

        steps:
            - name: „É™„Éù„Ç∏„Éà„É™„Çí„ÉÅ„Çß„ÉÉ„ÇØ„Ç¢„Ç¶„Éà
              uses: actions/checkout@v4
              with:
                  ref: main
                  token: ${{ secrets.GH_PAT }}

            - name: „Çø„Ç∞Âêç„ÇíÂèñÂæó
              id: get_tag
              run: echo "TAG_NAME=${GITHUB_REF#refs/tags/}" >> $GITHUB_ENV

            - name: GitHub Changelog Generator „Çí„Çª„ÉÉ„Éà„Ç¢„ÉÉ„Éó
              run: gem install github_changelog_generator

            - name: Changelog „ÇíÁîüÊàê
              run: |
                  github_changelog_generator \
                    --user ${{ github.repository_owner }} \
                    --project $(echo ${{ github.repository }} | cut -d '/' -f2) \
                    --token ${{ secrets.GITHUB_TOKEN }}

            - name: Â§âÊõ¥„Çí„Ç≥„Éü„ÉÉ„Éà
              run: |
                  if [ -n "$(git diff CHANGELOG.md)" ]; then
                      git config --global user.name "github-actions[bot]"
                      git config --global user.email "41898282+github-actions[bot]@users.noreply.github.com"
                      git add CHANGELOG.md
                      git commit -m "Update CHANGELOG.md" -m "Update CHANGELOG.md for ${TAG_NAME#v}"
                      git push origin main
                  else
                      echo "CHANGELOG.md „Å´Â§âÊõ¥„ÅØ„ÅÇ„Çä„Åæ„Åõ„Çì üìù"
                      echo "„Ç≥„Éü„ÉÉ„Éà„Çí„Çπ„Ç≠„ÉÉ„Éó„Åó„Åæ„Åô"
                  fi

            - name: „É™„É™„Éº„Çπ„Éé„Éº„Éà„Çí‰ΩúÊàê
              run: |
                  LATEST_RELEASE_LINE=$(grep -n "^## \[" CHANGELOG.md | head -n 1 | cut -d: -f1)
                  NEXT_RELEASE_LINE=$(grep -n "^## \[" CHANGELOG.md | sed -n '2p' | cut -d: -f1)

                  if [ -z "$NEXT_RELEASE_LINE" ]; then
                      tail -n +$LATEST_RELEASE_LINE CHANGELOG.md > LATEST_CHANGELOG.md
                  else
                      sed -n "${LATEST_RELEASE_LINE},$((NEXT_RELEASE_LINE - 1))p" CHANGELOG.md > LATEST_CHANGELOG.md
                  fi

                  echo "üéâ Êñ∞„Åó„ÅÑ„É™„É™„Éº„Çπ: **${{ env.TAG_NAME }}** „ÅåÂÖ¨Èñã„Åï„Çå„Åæ„Åó„ÅüÔºÅ üöÄ" > RELEASE_NOTE.md
                  echo "" >> RELEASE_NOTE.md
                  cat LATEST_CHANGELOG.md >> RELEASE_NOTE.md

            - name: GitHub„É™„É™„Éº„Çπ„Çí‰ΩúÊàê
              uses: softprops/action-gh-release@v2
              with:
                  tag_name: ${{ env.TAG_NAME }}
                  name: 'Release ${{ env.TAG_NAME }}'
                  body_path: ./RELEASE_NOTE.md
                  draft: false
                  prerelease: false
              env:
                  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
